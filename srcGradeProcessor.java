import java.io.*;
import java.nio.file.*;
import java.util.*;

public class GradeProcessor {

    static class Student {
        String name;
        String roll;
        int math, science, english;
        int total;
        double percent;
        String grade;

        Student(String name, String roll, int m, int s, int e) {
            this.name = name;
            this.roll = roll;
            this.math = m;
            this.science = s;
            this.english = e;
            this.total = m + s + e;
            this.percent = total / 3.0;
            this.grade = calculateGrade(this.percent);
        }

        private String calculateGrade(double p) {
            if (p >= 90) return "A+";
            if (p >= 80) return "A";
            if (p >= 70) return "B+";
            if (p >= 60) return "B";
            if (p >= 50) return "C";
            return "F";
        }
    }

    public static void main(String[] args) {
        Path csvPath = Paths.get("data", "students.csv");
        if (!Files.exists(csvPath)) {
            System.out.println("data/students.csv not found. Put the CSV in data/ and re-run.");
            return;
        }

        List<Student> students = new ArrayList<>();
        try (BufferedReader br = Files.newBufferedReader(csvPath)) {
            String line = br.readLine(); // header
            while ((line = br.readLine()) != null) {
                if (line.trim().isEmpty()) continue;
                // simple CSV split (works for this format)
                String[] parts = line.split(",");
                if (parts.length < 5) continue;
                String name = parts[0].trim();
                String roll = parts[1].trim();
                int m = Integer.parseInt(parts[2].trim());
                int s = Integer.parseInt(parts[3].trim());
                int e = Integer.parseInt(parts[4].trim());
                students.add(new Student(name, roll, m, s, e));
            }
        } catch (IOException ex) {
            System.err.println("Error reading CSV: " + ex.getMessage());
            return;
        }

        // build HTML
        StringBuilder html = new StringBuilder();
        html.append("<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n");
        html.append("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
        html.append("<title>Student Grades Dashboard</title>\n");
        html.append("<link rel=\"stylesheet\" href=\"web/styles.css\">\n");
        html.append("</head>\n<body>\n<div class=\"container\">\n");
        html.append("<h1>Student Grades Dashboard</h1>\n");
        html.append("<table>\n<thead><tr><th>Roll</th><th>Name</th><th>Math</th><th>Science</th><th>English</th><th>Total</th><th>%</th><th>Grade</th></tr></thead>\n<tbody>\n");

        int sumAll = 0;
        for (Student s : students) {
            html.append("<tr>");
            html.append("<td>").append(escape(s.roll)).append("</td>");
            html.append("<td>").append(escape(s.name)).append("</td>");
            html.append("<td>").append(s.math).append("</td>");
            html.append("<td>").append(s.science).append("</td>");
            html.append("<td>").append(s.english).append("</td>");
            html.append("<td>").append(s.total).append("</td>");
            html.append("<td>").append(String.format(\"%.2f\", s.percent)).append("</td>");
            html.append("<td class=\"grade ").append(s.grade).append("\">").append(s.grade).append("</td>");
            html.append("</tr>\n");
            sumAll += s.total;
        }

        html.append("</tbody>\n</table>\n");

        if (!students.isEmpty()) {
            double classAvg = sumAll / (students.size() * 3.0);
            html.append("<div class=\"summary\">");
            html.append("<p><strong>Students:</strong> ").append(students.size()).append("</p>");
            html.append("<p><strong>Class Average (%):</strong> ").append(String.format(\"%.2f\", classAvg)).append("</p>");
            html.append("</div>\n");
        }

        html.append("<footer>Generated by GradeProcessor.java</footer>\n");
        html.append("</div>\n</body>\n</html>");

        // write to report.html in project root
        Path out = Paths.get("report.html");
        try {
            Files.write(out, html.toString().getBytes());
            System.out.println("report.html generated successfully. Open report.html in your browser.");
        } catch (IOException ex) {
            System.err.println("Error writing report.html: " + ex.getMessage());
        }
    }

    private static String escape(String s) {
        return s.replace("&", "&amp;").replace("<", "&lt;").replace(">", "&gt;");
    }
}
